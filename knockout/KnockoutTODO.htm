<!doctype html>
<html lang="en">

<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"
        integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <link rel="stylesheet" href="/knockout/knockout1.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.6.1/font/bootstrap-icons.css">
    <title>ToDO Knockout</title>
</head>

<body>
    <div class="container">
        <h3 class="my-3 text-center">Knockout <span class="text-warning">TODO</span> App</h3>
        <div class="content-center" id="knockout-todo">
            <form data-bind="submit:addTask">
                <div class="input-group mb-3">
                    <input type="text" class="form-control" placeholder="What needs to be done?"
                        data-bind="value:newTaskText,disable:tasks().length > 4">
                    <div class="input-group-append">
                        <button class="btn btn-primary" type="submit"
                            data-bind="disable:tasks().length > 4">Add</button>
                    </div>
                </div>
            </form>
            <h5 class="my-2 text-primary text-center">Tasks list</h5>
            <table class=" my-2 table">
                <thead>
                    <tr>
                        <th>Task</th>
                        <th>Completed</th>
                        <th>Rating</th>
                        <th>action</th>
                        <th></th>
                    </tr>
                </thead>
                <!-- Todo: Generate table body -->
                <tbody data-bind="foreach:tasks,visible:tasks().length > 0">
                    <tr>
                        <td> <input class="form-control" type="text"
                                data-bind="value:title,event:{mouseover:enableDetails,mouseout:disableDetails}">
                            <p data-bind="class:completeStatus, visible:detailsEnabled">This task is <span
                                    data-bind="visible:isDone">Completed</span><span
                                    data-bind="hidden:isDone">Incomplete</span>
                            </p>
                        </td>
                        <td>
                            <input type="checkbox" data-bind="checked:isDone">
                        </td>
                        <td>
                            <div data-bind="starRating:points,visible:isDone"></div>
                        </td>
                        <td><button class=" btn btn-danger btn-small" data-bind="click:$root.removeTask">Delete</button>
                        </td>

                    </tr>
                </tbody>
            </table>
            <h5 class="text-warning">You have <span class=" badge badge-primary"
                    data-bind="text: inCompleteTasks().length">&nbsp;</span>
                incomplete
                task(s)
                <span class="text-success" data-bind="visible: inCompleteTasks().length == 0"> - it's beer time!</span>
            </h5>
        </div>
    </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/knockout/3.5.1/knockout-latest.js"
        integrity="sha512-2AL/VEauKkZqQU9BHgnv48OhXcJPx9vdzxN1JrKDVc4FPU/MEE/BZ6d9l0mP7VmvLsjtYwqiYQpDskK9dG8KBA=="
        crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.js"></script>
    <script src="https://code.jquery.com/ui/1.13.0/jquery-ui.js"
        integrity="sha256-xH4q8N0pEzrZMaRmd7gQVcTZiFei+HfRTBPJ1OGXC0k=" crossorigin="anonymous"></script>
    <script>
        function Task(data) {
            this.title = ko.observable(data.title);
            this.isDone = ko.observable(data.isDone);
            this.points = ko.observable(0);
            this.detailsEnabled = ko.observable(false);
            this.completeStatus = ko.computed(function () {
                return this.isDone() ? "text-success" : "text-danger";
            }, this)
            this.enableDetails = function () {
                this.detailsEnabled(true);
            };
            this.disableDetails = function () {
                this.detailsEnabled(false);
            };
        }
        ko.bindingHandlers.starRating = {
            init: function (element, valueAccessor) {
                $(element).addClass("starRating");
                for (var i = 0; i < 5; i++) {
                    $('<i class="bi bi-star-fill">').appendTo(element);
                }
                $("i", element).each(function (index) {
                    $(this).hover(
                        function () {$(this).prevAll().add(this).addClass("hoverChosen")},
                        function () {$(this).prevAll().add(this).removeClass("hoverChosen")}
                    ).click(function () {
                        var observable = valueAccessor();  // Get the associated observable
                        observable(index + 1);               // Write the new rating to it
                    });
                });
            },
            update: function (element, valueAccessor) {
                var observable = valueAccessor();
                $('i', element).each(function (index) {
                    $(this).toggleClass('icon-red', index < observable());
                });
            }
        };

        function TaskListViewModel() {
            var self = this;
            self.tasks = ko.observableArray([]);
            self.newTaskText = ko.observable();
            self.inCompleteTasks = ko.computed(function () {
                return ko.utils.arrayFilter(self.tasks(), function (task) {
                    return !task.isDone()
                });
            });

            self.addTask = function () {
                self.tasks.push(new Task({title: this.newTaskText()}));
                self.newTaskText("");
            }
            self.removeTask = function (task) {
                self.tasks.remove(task);
            }

        }
        ko.applyBindings(new TaskListViewModel(), document.getElementById("knockout-todo"))

    </script>


    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"
        integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
        crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"
        integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
        crossorigin="anonymous"></script>

</body>

</html>